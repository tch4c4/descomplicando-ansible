- name: Removendo cluster antigo caso exista
  command:
    kubeadm reset --force
  register: kubeadm_reset

- name: Inicializando o cluster K8S
  command:
    kubeadm init
  register: kubeadm_init

- name: Criando o diretorio .kube
  file:
    path: ~/.kube
    state: directory

- name: Link do arquivo admin.conf para o ~/.kube/config
  file:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    state: link #faz o link para o arquivo

- name: Configurando o pod network Weavenet
  shell: kubectl apply -f {{ default_url_k8s_weavenet }} #adicionar a url nas variaveis
  register: weavenet_result

- name: Pegando o token para adicionar os workers no cluster
  shell: kubeadm token list | cut -d ' ' -f1 | sed -n '2p' # vai pegar apenas o token
  register: k8s_token

  #gerar chave CA
- name: CA Hash
  shell: openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //' 
  register: k8s_master_ca_hash

- name: Adicionando o token e o hash em um dummy host
  add_host:
    name: "K8S_TOKEN_HOLDER"
    token: "{{ k8s_token.stdout }}"
    hash: "{{ k8s_master_ca_hash.stdout }}"

- name:
  debug:
    msg: "[MASTER] K8S_TOKEN_HOLDER - O token eh {{ hostvars['K8S_TOKEN_HOLDER']['token'] }} "

- name:
  debug:
    msg: "[MASTER] K8S_TOKEN_HOLDER - O hash eh {{ hostvars['K8S_TOKEN_HOLDER']['hash'] }} "
