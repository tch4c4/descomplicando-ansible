- name: Criando o Sec Group
  local_action:
    module: ec2_group
    name: "{{ sec_group_name }}"
    description: sg giropops
    profile: "{{ profile }}"
    region: "{{ region }}"
    rules:
    - proto: tcp
      from_port: 22
      to_port: 22
      cidr_ip: 0.0.0.0/0
      rule_desc: SSH
    - proto: tcp
      from_port: 2379
      to_port: 2380
      cidr_ip: 0.0.0.0/0
      rule_desc: etcd server API
    - proto: tcp
      from_port: 6443
      to_port: 6443
      cidr_ip: 0.0.0.0/0
      rule_desc: kube-apiserver
    - proto: tcp
      from_port: 10250
      to_port: 10250
      cidr_ip: 0.0.0.0/0
      rule_desc: Kubelet API
    - proto: tcp
      from_port: 10251
      to_port: 10251
      cidr_ip: 0.0.0.0/0
      rule_desc: kube-scheduler
    - proto: tcp
      from_port: 10252
      to_port: 10252
      cidr_ip: 0.0.0.0/0
      rule_desc: kube-controller-manager
    - proto: tcp
      from_port: 10255
      to_port: 10255
      cidr_ip: 0.0.0.0/0
      rule_desc: Kubelet API Read-only
    - proto: tcp
      from_port: 30000
      to_port: 32767
      cidr_ip: 0.0.0.0/0
      rule_desc: NodePort Services

    - proto: tcp
      from_port: 6783
      to_port: 6783
      cidr_ip: 0.0.0.0/0
      rule_desc: WeaveNet
    - proto: udp
      from_port: 6783
      to_port: 6783
      cidr_ip: 0.0.0.0/0
      rule_desc: WeaveNet
    - proto: udp
      from_port: 6784
      to_port: 6784
      cidr_ip: 0.0.0.0/0
      rule_desc: WeaveNet

    - proto: tcp
      from_port: 32222
      to_port: 32222
      cidr_ip: 0.0.0.0/0
      rule_desc: GiropopsApp
    - proto: tcp
      from_port: 32111
      to_port: 32111
      cidr_ip: 0.0.0.0/0
      rule_desc: Giropops
    rules_egress:
    - proto: all
      cidr_ip: 0.0.0.0/0
  register: basic_firewall

- name: Criando a instancia EC2 Master
  local_action: ec2
    group={{ sec_group_name }}
    instance_type={{ instance_type }}
    image={{ image }}
    profile={{ profile }}
    wait=true
    region={{ region }}
    keypair={{ keypair }}
    count={{ count_master }}
  register: ec2_master

- name: Criando a instancia EC2 Worker
  local_action: ec2
    group={{ sec_group_name }}
    instance_type={{ instance_type }}
    image={{ image }}
    profile={{ profile }}
    wait=true
    region={{ region }}
    keypair={{ keypair }}
    count={{ count_worker }}
  register: ec2_worker

- name: Adicionando a instancia master ao inventario temp
  add_host: name={{ item.public_ip }} groups=master
  with_items: "{{ ec2_master.instances }}"

- name: Adicionando a instancia worker ao inventario temp
  add_host: name={{ item.public_ip }} groups=worker
  with_items: "{{ ec2_worker.instances }}"

- name: Adicionando o IP do master criada ao arquivo hosts
  local_action: 
    module: lineinfile
    src: "./hosts"
    dest: "./hosts"
    regexp: "{{ item.public_ip }}"
    insertafter: \[k8s-master\]
    line: "{{ item.public_ip }}"
  with_items: "{{ ec2_master.instances }}"

- name: Adicionando o IP privado do master criada ao arquivo hosts
  local_action: 
    module: lineinfile
    src: "./hosts"
    dest: "./hosts"
    regexp: "{{ item.private_ip }}"
    insertafter: \[k8s-workers\:vars\] 
    line: "K8S_MASTER_NODE_IP={{ item.private_ip }}"
  with_items: "{{ ec2_master.instances }}"
  
- name: Adicionando o IP publico das workers criadas ao arquivo hosts
  local_action: 
    module: lineinfile
    src: "./hosts"
    dest: "./hosts"
    regexp: "{{ item.public_ip }}"
    insertafter: \[k8s-workers\]
    line: "{{ item.public_ip }}"
  with_items: "{{ ec2_worker.instances }}"

- name: Adicionando o IP privado da instancia criada ao arquivo hosts
  local_action: 
    module: lineinfile
    src: "./hosts"
    dest: "./hosts"
    regexp: "{{ item.private_ip }}"
    insertafter: \[k8s-workers-priv\] 
    line: "{{ item.private_ip }}"
  with_items: "{{ ec2_worker.instances }}"

- name: Esperando o SSH
  local_action: wait_for
    host={{ item.public_ip }}
    port=22
    state=started
  with_items: "{{ ec2_worker.instances }}"

- name: Adicionando uma tag na instancia master
  local_action: ec2_tag resource={{ item.id }} region={{ region }} profile={{ profile }} state=present
  with_items: "{{ ec2_master.instances }}"
  args:
    tags:
      Name: master-{{ item.ami_launch_index|int + 1 }}

- name: Adicionando uma tag na instancia
  local_action: ec2_tag resource={{ item.id }} region={{ region }} profile={{ profile }} state=present
  with_items: "{{ ec2_worker.instances }}"
  args:
    tags:
      Name: worker-{{ item.ami_launch_index|int + 1 }}

